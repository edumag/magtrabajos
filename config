#!/bin/bash

## @file config
## @brief Configuración básica para cualquier script que estemos utilizando
##
## @defgroup configuracion Configuración 
##
## Añadir con source a cualquier script que se utilice, nos automatiza:
##
## - Tener disponible las variables:
##   
##   + DIR_CONF_USUARIO: Directorio con las configuraciones del usuario
##   
##   + DIR_MAGTRABAJOS: Directorio de magtrabajos
##   
##   + DIR_PROYECTO: Directorio del proyecto actual
##   
##   + DIR_TMP: Directorio temporal
##   
##   + parte_dir: Contenido de la dirección que debemos sustituir por localhost
##                si queremos tener la url local.
##   
##   + DIR_PROGRAMA: Directorio del script actual
##   
##   + PROGRAMA: Nombre del script actual.
##
## - Añadir librerías de libash
##   Por defecto nos añade la general y configuracion, pero podemos antes de llamarlo indicar más 
##   librerías a incluir mediante LIBS="pantalla" por ejemplo.
##
## - Si estamos en un componente o pluging buscara su configuración por defecto en
##   su directorio con nombre config.default y la del usuarios si la hay.
##
## @todo Aplicar este sistema a todos los sripts de magtrabajos
##
## @{

## Si ya ha sido cogido el fichero no hace falta repetir
if [ "$config_magtrabajos_cargado" == "" ] ; then

   config_magtrabajos_cargado=1

   ## Directorio donde se guardan las configuraciones del usuario
   DIR_CONF_USUARIO="$HOME/.magtrabajos/"

   # Creamos directorio temporal
   [[ -d '/tmp/magtrabajos' ]] && cambiar_permisos=0 || cambiar_permisos=1
   DIR_TMP="/tmp/magtrabajos/$USER/"
   [[ -d "$DIR_TMP" ]] || mkdir -p "$DIR_TMP"
   # Añadir permisos para que cualquier usuario pueda crear su carpeta dentro de magtrabajos
   [[ $cambiar_permisos == 1 ]] && chmod go+rwx "/tmp/magtrabajos"

   ## Para construir la url del servidor local donde se genera la documentación 
   ## cambiamos la parte del directorio correspondiente por localhost/
   parte_dir='/home/datos/www'

   ## Directorio de magtrabajos
   DIR_MAGTRABAJOS=$(dirname "$BASH_SOURCE")

   # Si es un enlace hay que buscar el directorio de programas sobre al que apunta
   if [ -L "$0" ] ; then
      DIR_PROGRAMA=$(dirname "`readlink $0`")  ##< Directorio del script actual
      PROGRAMA=$(basename "`readlink $0`")     ##< Nombre del script actual
   else
      DIR_PROGRAMA=$(dirname "$0")
      PROGRAMA=$(basename "$0")
   fi

   # Añadimos configuración por defecto
   # @todo coger el $HOME/.magtrabajos/configuracion/libash

   [[ -e ~/.libashrc ]] && source ~/.libashrc         # Buscamos configuración personal sobre libash

   # Añadimos librerías necesarias

   LIBS="general configuracion $LIBS"  # Librerías a cargar
   DIR_LIB="${DIR_MAGTRABAJOS}/componentes/libash/"

   for LIB in $LIBS ; do
      LIBRERIA="${DIR_LIB}$LIB"
      if [ -e "$LIBRERIA" ] ; then
         source "$LIBRERIA"
         if [ $? != 0 ] ; then
            echo "ERROR::Insertando librería $LIBRERIA"
            exit
         fi
      else
         echo "Falta la librería $LIBRERIA de libash o no se encuentra"
         exit
      fi
      log "INICIO" "Librería insertada: $LIBRERIA"
   done

   # Recogemos configuración por defecto de magtrabajos 

   configuracion_por_defecto_magtrabajos="${DIR_MAGTRABAJOS}/config.default"
   configuracion_leer "${DIR_CONF_USUARIO}configuracion/magtrabajos" "$configuracion_por_defecto_magtrabajos" 'mt_' 

   # Si no se pasa un proyecto probamos con nombre de carpeta actual

   if [ -z $proyecto ] ; then
      # Comprobamos que hay una carpeta de proyecto en la configuración
      carpeta_actual="`basename "$(pwd)"`"
      if [ -d "./magtrabajos/" ] ; then
         [[ $DEV ]] && echo "Recogemos carpeta actual como proyecto"
         proyecto="$carpeta_actual"
      fi
   fi

   # Recogemos configuración del proyecto

   configuracion_de_proyecto=".magtrabajos/configuracion/magtrabajos"
   [[ -e "$configuracion_de_proyecto" ]] && configuracion_leer "$configuracion_de_proyecto" "$configuracion_por_defecto_magtrabajos" 'mt_' 

   ## Mostrar variables globales

   function mostrar_variables_globales() {

      echo
      echo Variables globales que se definen en config
      echo
      echo "DIR_CONF_USUARIO .......$DIR_CONF_USUARIO"
      echo "DIR_PROYECTO ...........$DIR_PROYECTO"
      echo "DIR_TMP ................$DIR_TMP"
      echo "parte_dir ...............$parte_dir"
      echo "DIR_MAGTRABAJOS ........$DIR_MAGTRABAJOS"
      echo "DIR_PROGRAMA ...........$DIR_PROGRAMA"
      echo "PROGRAMA ...............$PROGRAMA"
      echo "LIBS ...................$LIBS"
      echo "DIR_LIB ................$DIR_LIB"
      echo
      }

   # Si encontramos --depurar dentro de los parametros recibidos activamos
   # depuración.

   [[ "`echo $* | grep -e '--depurar'`" != "" ]] && DEV=1

   [[ $DEV ]] && mostrar_variables_globales 

fi


## @} 
